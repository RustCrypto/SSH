name: ssh-key

on:
  pull_request:
    paths:
      - ".github/workflows/ssh-key.yml"
      - "ssh-cipher/**"
      - "ssh-encoding/**"
      - "ssh-key/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: ssh-key

env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux (32-bit)
          - target: i686-unknown-linux-gnu
            platform: ubuntu-latest
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # macOS (64-bit)
          - target: x86_64-apple-darwin
            platform: macos-latest
            rust: stable

          # Windows (64-bit)
          - target: x86_64-pc-windows-msvc
            platform: windows-latest
            rust: stable
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
      - run: ${{ matrix.deps }}
      - run: cargo build --target ${{ matrix.target }} --release --all-features

  # Disabled until we get rid of [patch.crates-io] in the workspace
  #minimal-versions:
  #  uses: RustCrypto/actions/.github/workflows/minimal-versions.yml@master
  #  with:
  #    stable-cmd: cargo test --all-features --release
  #    working-directory: ${{ github.workflow }}

  no_std:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.81.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: cargo hack build --target ${{ matrix.target }} --feature-powerset --exclude-features default,dsa,ed25519,getrandom,p256,p384,p521,rsa,tdes,std,ppk --release
      - run: cargo build --target ${{ matrix.target }} --no-default-features --features alloc,crypto,dsa,encryption,tdes --release

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.81.0 # MSRV
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: cargo hack test --feature-powerset --exclude-features default,dsa,ed25519,getrandom,p256,p384,p521,rsa,tdes,std,ppk --release
      - run: cargo test --release
      - run: cargo test --release --features getrandom
      - run: cargo test --release --features std
      - run: cargo test --all-features # debug build
      - run: cargo test --release --all-features
